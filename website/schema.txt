SQL Star Schema

Player
-PlayerID <- created
-Name
-online_id
-Platform

PlayerReplay
-ReplayId
-PlayerID 
-ranking <- applies to a replay
-team <- applies to a replay

Replay
-ReplayId
-Map
-Date/Time
-team0_score
-team1_score
-team_size


t2.micro with single-az is $13/month


However, RDS is kind of expensive, I want to spend more like <$5/month for dev/test

DynamoDB tables cost ~ 1$ / month

Access Patterns

By Player Id (duplicate record for each player in game)
- Primary Key = online_id
- Sort Key = replay_date

- player_name  (unicode)
- team (Number)
- team_size (Number)
- team0_players (StringSet)
- team1_players (StringSet)
- team0_score (Number)
- team1_score (Number)
- platform (String - Steam, PS4)
- ranking (Number)
- replay_key
- replay_map


Global Secondary Index (name-index)   Supports looking up by handle
- Partition Key = name
- Attributes: online_id, name

Consider Global Secondary index based on ranking (i.e. top players, similar skills)

Supports - Lookup all matches for player_name, online_id in chrono order

Consider Local Secondary index = team_size, replay_map


By Replay Key  
- Primay Key = replay_key


By Most Viewed? (If popular - Consider adding to replay key_table as Global Secondary)
